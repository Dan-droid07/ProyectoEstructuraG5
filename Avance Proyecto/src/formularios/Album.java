
package formularios;

import DAO.Cls_Personajes;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import listadoblementeenlazada.ListMethods;
import listadoblementeenlazada.Personajes;

/**
 *
 * @author dsiles
 */
public class Album extends javax.swing.JFrame {

    /**
     * Creates new form Album
     */
    private final Cls_Personajes CP;
     ListMethods album = new ListMethods();
     ArrayList miArray = new ArrayList();
     
     //INSTANCIAMOS CON LA CLASE PERSONAJES
     Personajes personaje = new Personajes();
     
    //CONSTRUCTOR CON PARAMETROS
    public Album() throws SQLException {
        initComponents();
        CP = new Cls_Personajes();
        listar(); //AGREGO EL METODO LISTAR PARA LLAMAR AUTOMATICAMENTE LOS DATOS QUE LLENAN MI TABLA
        //populateTableWithLinkedList();
        this.setLocationRelativeTo(null);
        ArrayList<Object> listaPersonajes = new ArrayList<Object>();
     
    }
    
    //METODO PARA LLAMAR DATOS Y LLENAR TABLA
    private void listar() throws SQLException{ //DENTO DE LISTAR VOY A LLAMAR/AGREGAR EL METODO GETDATOS DE LA CLASE CLS_PERSONAJES
       Table.setModel(CP.getDatos());  //Table es la tabla en el JFRAME, CP.getDatos instancio con la clase CLS_personajes y traigo el metodo getDatos
       // listaPersonajes[0] = model
  /*      for (Object elemento : miArray) {
            miArray.add(CP.getDatos());
        }
     for (Object elemento : miArray) {
            album.insertNode(miArray);
            
        }  */
     
    }
    
    public void populateTableWithLinkedList(){  /*
    //creat a user linkedlist
     DefaultTableModel model = (DefaultTableModel) Table.getModel();
        Object[] columnsName = new Object[8];
        
        //create personajes
  
       Personajes p1 = new Personajes(1, "Yoda","Sabio","Master","Darth Vader","Domina Fuerza","Sable Luz", "Bueno");
      //   DefaultTableModel model = (DefaultTableModel) Table.getModel();
        //add personajes to the list
     //    for (int i = 0; i < Table.getRowCount(); i++) {
       //      list.add((Personajes) Table.getModel());
       // }
       list.add(p1);
        
        //get JTABLE DEFAULT MODEL
        // DefaultTableModel model = (DefaultTableModel) Table.getModel();
        //POPULATE THE JTABLE WITH THE LIST
        Object[] column;
        for (int i = 0; i < list.size(); i++) { //model.getRowCount();
            column = new Object[8];
            column[0] = list.get(i).getIdPersonaje() ;
            column[1] = list.get(i).getNombre();
            column[2] = list.get(i).getPersonalidad();
            column[3] = list.get(i).getOcupacion();
            column[4] = list.get(i).getEnemigos();
            column[5] = list.get(i).getHabilidades();
            column[6] = list.get(i).getArmas();
            column[7] = list.get(i).getTipoPersonaje();
            
            model.addRow(column);
        }  */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id_Personajes", "Nombre", "Personalidad", "Ocupacion", "Enemigos", "Habilidades", "Armas", "Tipo_Personaje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1086, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Album.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Album.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Album.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Album.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Album().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Album.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
